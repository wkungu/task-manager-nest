services:
  db:
    container_name: tasks-db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskdb
    command: postgres -c 'shared_preload_libraries=pg_stat_statements'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'user', '-d', 'taskdb']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'

  backend:
    container_name: tasks-backend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 10s
      timeout: 5s
      retries: 3
    build: ./backend
    env_file:
      - ./backend/.env
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: tasks-frontend
    platform: linux/amd64
    build: ./frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: ['npm', 'run', 'dev']

  # test-runner:
  #   container_name: tasks-tests
  #   build: ./backend
  #   command: npm run test:ci
  #   env_file:
  #     - ./backend/.env.test
  #   depends_on:
  #     - db

volumes:
  db_data:
  node_modules:
